// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tests PasswordResetConfirmContainer Test mounting of component 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Connect(Form(withRouter(ResetConfirm)))
      history={
        Object {
          "push": [MockFunction],
        }
      }
      match={
        Object {
          "params": Object {
            "token": "tcvygbuhijn6789",
          },
        }
      }
      showModal={[MockFunction]}
    >
      <Form(withRouter(ResetConfirm))
        history={
          Object {
            "push": [MockFunction],
          }
        }
        match={
          Object {
            "params": Object {
              "token": "tcvygbuhijn6789",
            },
          }
        }
        resetConfirmActions={[Function]}
        showModal={[MockFunction]}
      >
        <withRouter(ResetConfirm)
          form={
            Object {
              "getFieldDecorator": [Function],
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldProps": [Function],
              "getFieldValue": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "isSubmitting": [Function],
              "resetFields": [Function],
              "setFields": [Function],
              "setFieldsInitialValue": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
              "validateFieldsAndScroll": [Function],
            }
          }
          history={
            Object {
              "push": [MockFunction],
            }
          }
          match={
            Object {
              "params": Object {
                "token": "tcvygbuhijn6789",
              },
            }
          }
          resetConfirmActions={[Function]}
          showModal={[MockFunction]}
        >
          <ResetConfirm
            form={
              Object {
                "getFieldDecorator": [Function],
                "getFieldError": [Function],
                "getFieldInstance": [Function],
                "getFieldProps": [Function],
                "getFieldValue": [Function],
                "getFieldsError": [Function],
                "getFieldsValue": [Function],
                "isFieldTouched": [Function],
                "isFieldValidating": [Function],
                "isFieldsTouched": [Function],
                "isFieldsValidating": [Function],
                "isSubmitting": [Function],
                "resetFields": [Function],
                "setFields": [Function],
                "setFieldsInitialValue": [Function],
                "setFieldsValue": [Function],
                "submit": [Function],
                "validateFields": [Function],
                "validateFieldsAndScroll": [Function],
              }
            }
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            resetConfirmActions={[Function]}
            showModal={[MockFunction]}
          >
            <Form
              className="reset-form"
              colon={true}
              hideRequiredMark={false}
              layout="horizontal"
              onSubmit={[Function]}
              style={
                Object {
                  "textAlign": "left",
                }
              }
            >
              <form
                className="ant-form ant-form-horizontal reset-form"
                onSubmit={[Function]}
                style={
                  Object {
                    "textAlign": "left",
                  }
                }
              >
                <div>
                  <h1>
                    Create your new password
                  </h1>
                </div>
                <FormItem
                  className="reset-label"
                  hasFeedback={true}
                  label="Password"
                >
                  <Row
                    className="ant-form-item reset-label"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item reset-label"
                    >
                      <Col
                        className="ant-form-item-label"
                      >
                        <div
                          className="ant-col ant-form-item-label"
                        >
                          <label
                            className="ant-form-item-required"
                            htmlFor="password"
                            onClick={[Function]}
                            title="Password"
                          >
                            Password
                          </label>
                        </div>
                      </Col>
                      <Col
                        className="ant-form-item-control-wrapper"
                      >
                        <div
                          className="ant-col ant-form-item-control-wrapper"
                        >
                          <div
                            className="ant-form-item-control"
                          >
                            <span
                              className="ant-form-item-children"
                            >
                              <Password
                                action="click"
                                data-__field={
                                  Object {
                                    "name": "password",
                                  }
                                }
                                data-__meta={
                                  Object {
                                    "name": "password",
                                    "originalProps": Object {
                                      "action": "click",
                                      "inputPrefixCls": "ant-input",
                                      "name": "password",
                                      "onChange": [Function],
                                      "prefixCls": "ant-input-password",
                                      "type": "input",
                                      "visibilityToggle": true,
                                    },
                                    "ref": null,
                                    "rules": Array [
                                      Object {
                                        "message": "Please input your password!",
                                        "required": true,
                                      },
                                      Object {
                                        "validator": [Function],
                                      },
                                    ],
                                    "trigger": "onChange",
                                    "validate": Array [
                                      Object {
                                        "rules": Array [
                                          Object {
                                            "message": "Please input your password!",
                                            "required": true,
                                          },
                                          Object {
                                            "validator": [Function],
                                          },
                                        ],
                                        "trigger": Array [
                                          "onChange",
                                        ],
                                      },
                                    ],
                                    "valuePropName": "value",
                                  }
                                }
                                id="password"
                                inputPrefixCls="ant-input"
                                name="password"
                                onChange={[Function]}
                                prefixCls="ant-input-password"
                                type="input"
                                visibilityToggle={true}
                              >
                                <Input
                                  action="click"
                                  className="ant-input-password"
                                  data-__field={
                                    Object {
                                      "name": "password",
                                    }
                                  }
                                  data-__meta={
                                    Object {
                                      "name": "password",
                                      "originalProps": Object {
                                        "action": "click",
                                        "inputPrefixCls": "ant-input",
                                        "name": "password",
                                        "onChange": [Function],
                                        "prefixCls": "ant-input-password",
                                        "type": "input",
                                        "visibilityToggle": true,
                                      },
                                      "ref": null,
                                      "rules": Array [
                                        Object {
                                          "message": "Please input your password!",
                                          "required": true,
                                        },
                                        Object {
                                          "validator": [Function],
                                        },
                                      ],
                                      "trigger": "onChange",
                                      "validate": Array [
                                        Object {
                                          "rules": Array [
                                            Object {
                                              "message": "Please input your password!",
                                              "required": true,
                                            },
                                            Object {
                                              "validator": [Function],
                                            },
                                          ],
                                          "trigger": Array [
                                            "onChange",
                                          ],
                                        },
                                      ],
                                      "valuePropName": "value",
                                    }
                                  }
                                  disabled={false}
                                  id="password"
                                  name="password"
                                  onChange={[Function]}
                                  prefixCls="ant-input"
                                  suffix={
                                    <Icon
                                      className="ant-input-password-icon"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                      type="eye-invisible"
                                    />
                                  }
                                  type="password"
                                >
                                  <span
                                    className="ant-input-password ant-input-affix-wrapper"
                                  >
                                    <input
                                      action="click"
                                      className="ant-input"
                                      data-__field={
                                        Object {
                                          "name": "password",
                                        }
                                      }
                                      data-__meta={
                                        Object {
                                          "name": "password",
                                          "originalProps": Object {
                                            "action": "click",
                                            "inputPrefixCls": "ant-input",
                                            "name": "password",
                                            "onChange": [Function],
                                            "prefixCls": "ant-input-password",
                                            "type": "input",
                                            "visibilityToggle": true,
                                          },
                                          "ref": null,
                                          "rules": Array [
                                            Object {
                                              "message": "Please input your password!",
                                              "required": true,
                                            },
                                            Object {
                                              "validator": [Function],
                                            },
                                          ],
                                          "trigger": "onChange",
                                          "validate": Array [
                                            Object {
                                              "rules": Array [
                                                Object {
                                                  "message": "Please input your password!",
                                                  "required": true,
                                                },
                                                Object {
                                                  "validator": [Function],
                                                },
                                              ],
                                              "trigger": Array [
                                                "onChange",
                                              ],
                                            },
                                          ],
                                          "valuePropName": "value",
                                        }
                                      }
                                      disabled={false}
                                      id="password"
                                      name="password"
                                      onChange={[Function]}
                                      onKeyDown={[Function]}
                                      style={null}
                                      type="password"
                                      value=""
                                    />
                                    <span
                                      className="ant-input-suffix"
                                    >
                                      <Icon
                                        className="ant-input-password-icon"
                                        key="passwordIcon"
                                        onClick={[Function]}
                                        onMouseDown={[Function]}
                                        type="eye-invisible"
                                      >
                                        <LocaleReceiver
                                          componentName="Icon"
                                        >
                                          <i
                                            aria-label="icon: eye-invisible"
                                            className="anticon anticon-eye-invisible ant-input-password-icon"
                                            onClick={[Function]}
                                            onMouseDown={[Function]}
                                            tabIndex={-1}
                                          >
                                            <IconReact
                                              className=""
                                              type="eye-invisible-o"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className=""
                                                data-icon="eye-invisible"
                                                fill="currentColor"
                                                focusable="false"
                                                height="1em"
                                                key="svg-eye-invisible"
                                                viewBox="64 64 896 896"
                                                width="1em"
                                              >
                                                <path
                                                  d="M942.2 486.2Q889.47 375.11 816.7 305l-50.88 50.88C807.31 395.53 843.45 447.4 874.7 512 791.5 684.2 673.4 766 512 766q-72.67 0-133.87-22.38L323 798.75Q408 838 512 838q288.3 0 430.2-300.3a60.29 60.29 0 0 0 0-51.5zm-63.57-320.64L836 122.88a8 8 0 0 0-11.32 0L715.31 232.2Q624.86 186 512 186q-288.3 0-430.2 300.3a60.3 60.3 0 0 0 0 51.5q56.69 119.4 136.5 191.41L112.48 835a8 8 0 0 0 0 11.31L155.17 889a8 8 0 0 0 11.31 0l712.15-712.12a8 8 0 0 0 0-11.32zM149.3 512C232.6 339.8 350.7 258 512 258c54.54 0 104.13 9.36 149.12 28.39l-70.3 70.3a176 176 0 0 0-238.13 238.13l-83.42 83.42C223.1 637.49 183.3 582.28 149.3 512zm246.7 0a112.11 112.11 0 0 1 146.2-106.69L401.31 546.2A112 112 0 0 1 396 512z"
                                                  key="svg-eye-invisible-svg-0"
                                                />
                                                <path
                                                  d="M508 624c-3.46 0-6.87-.16-10.25-.47l-52.82 52.82a176.09 176.09 0 0 0 227.42-227.42l-52.82 52.82c.31 3.38.47 6.79.47 10.25a111.94 111.94 0 0 1-112 112z"
                                                  key="svg-eye-invisible-svg-1"
                                                />
                                              </svg>
                                            </IconReact>
                                          </i>
                                        </LocaleReceiver>
                                      </Icon>
                                    </span>
                                  </span>
                                </Input>
                              </Password>
                            </span>
                            <Animate
                              animation={Object {}}
                              component=""
                              componentProps={Object {}}
                              key="help"
                              onAppear={[Function]}
                              onEnd={[Function]}
                              onEnter={[Function]}
                              onLeave={[Function]}
                              transitionAppear={true}
                              transitionEnter={true}
                              transitionLeave={true}
                              transitionName="show-help"
                            />
                          </div>
                        </div>
                      </Col>
                    </div>
                  </Row>
                </FormItem>
                <FormItem
                  className="reset-label"
                  hasFeedback={true}
                  label="Confirm Password"
                >
                  <Row
                    className="ant-form-item reset-label"
                    gutter={0}
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item reset-label"
                    >
                      <Col
                        className="ant-form-item-label"
                      >
                        <div
                          className="ant-col ant-form-item-label"
                        >
                          <label
                            className="ant-form-item-required"
                            htmlFor="confirm_password"
                            onClick={[Function]}
                            title="Confirm Password"
                          >
                            Confirm Password
                          </label>
                        </div>
                      </Col>
                      <Col
                        className="ant-form-item-control-wrapper"
                      >
                        <div
                          className="ant-col ant-form-item-control-wrapper"
                        >
                          <div
                            className="ant-form-item-control"
                          >
                            <span
                              className="ant-form-item-children"
                            >
                              <Password
                                action="click"
                                data-__field={
                                  Object {
                                    "name": "confirm_password",
                                  }
                                }
                                data-__meta={
                                  Object {
                                    "name": "confirm_password",
                                    "originalProps": Object {
                                      "action": "click",
                                      "inputPrefixCls": "ant-input",
                                      "name": "confirm_password",
                                      "onChange": [Function],
                                      "prefixCls": "ant-input-password",
                                      "visibilityToggle": true,
                                    },
                                    "ref": null,
                                    "rules": Array [
                                      Object {
                                        "message": "Please confirm your password!",
                                        "required": true,
                                      },
                                      Object {
                                        "validator": [Function],
                                      },
                                    ],
                                    "trigger": "onChange",
                                    "validate": Array [
                                      Object {
                                        "rules": Array [
                                          Object {
                                            "message": "Please confirm your password!",
                                            "required": true,
                                          },
                                          Object {
                                            "validator": [Function],
                                          },
                                        ],
                                        "trigger": Array [
                                          "onChange",
                                        ],
                                      },
                                    ],
                                    "valuePropName": "value",
                                  }
                                }
                                id="confirm_password"
                                inputPrefixCls="ant-input"
                                name="confirm_password"
                                onChange={[Function]}
                                prefixCls="ant-input-password"
                                visibilityToggle={true}
                              >
                                <Input
                                  action="click"
                                  className="ant-input-password"
                                  data-__field={
                                    Object {
                                      "name": "confirm_password",
                                    }
                                  }
                                  data-__meta={
                                    Object {
                                      "name": "confirm_password",
                                      "originalProps": Object {
                                        "action": "click",
                                        "inputPrefixCls": "ant-input",
                                        "name": "confirm_password",
                                        "onChange": [Function],
                                        "prefixCls": "ant-input-password",
                                        "visibilityToggle": true,
                                      },
                                      "ref": null,
                                      "rules": Array [
                                        Object {
                                          "message": "Please confirm your password!",
                                          "required": true,
                                        },
                                        Object {
                                          "validator": [Function],
                                        },
                                      ],
                                      "trigger": "onChange",
                                      "validate": Array [
                                        Object {
                                          "rules": Array [
                                            Object {
                                              "message": "Please confirm your password!",
                                              "required": true,
                                            },
                                            Object {
                                              "validator": [Function],
                                            },
                                          ],
                                          "trigger": Array [
                                            "onChange",
                                          ],
                                        },
                                      ],
                                      "valuePropName": "value",
                                    }
                                  }
                                  disabled={false}
                                  id="confirm_password"
                                  name="confirm_password"
                                  onChange={[Function]}
                                  prefixCls="ant-input"
                                  suffix={
                                    <Icon
                                      className="ant-input-password-icon"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                      type="eye-invisible"
                                    />
                                  }
                                  type="password"
                                >
                                  <span
                                    className="ant-input-password ant-input-affix-wrapper"
                                  >
                                    <input
                                      action="click"
                                      className="ant-input"
                                      data-__field={
                                        Object {
                                          "name": "confirm_password",
                                        }
                                      }
                                      data-__meta={
                                        Object {
                                          "name": "confirm_password",
                                          "originalProps": Object {
                                            "action": "click",
                                            "inputPrefixCls": "ant-input",
                                            "name": "confirm_password",
                                            "onChange": [Function],
                                            "prefixCls": "ant-input-password",
                                            "visibilityToggle": true,
                                          },
                                          "ref": null,
                                          "rules": Array [
                                            Object {
                                              "message": "Please confirm your password!",
                                              "required": true,
                                            },
                                            Object {
                                              "validator": [Function],
                                            },
                                          ],
                                          "trigger": "onChange",
                                          "validate": Array [
                                            Object {
                                              "rules": Array [
                                                Object {
                                                  "message": "Please confirm your password!",
                                                  "required": true,
                                                },
                                                Object {
                                                  "validator": [Function],
                                                },
                                              ],
                                              "trigger": Array [
                                                "onChange",
                                              ],
                                            },
                                          ],
                                          "valuePropName": "value",
                                        }
                                      }
                                      disabled={false}
                                      id="confirm_password"
                                      name="confirm_password"
                                      onChange={[Function]}
                                      onKeyDown={[Function]}
                                      style={null}
                                      type="password"
                                      value=""
                                    />
                                    <span
                                      className="ant-input-suffix"
                                    >
                                      <Icon
                                        className="ant-input-password-icon"
                                        key="passwordIcon"
                                        onClick={[Function]}
                                        onMouseDown={[Function]}
                                        type="eye-invisible"
                                      >
                                        <LocaleReceiver
                                          componentName="Icon"
                                        >
                                          <i
                                            aria-label="icon: eye-invisible"
                                            className="anticon anticon-eye-invisible ant-input-password-icon"
                                            onClick={[Function]}
                                            onMouseDown={[Function]}
                                            tabIndex={-1}
                                          >
                                            <IconReact
                                              className=""
                                              type="eye-invisible-o"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className=""
                                                data-icon="eye-invisible"
                                                fill="currentColor"
                                                focusable="false"
                                                height="1em"
                                                key="svg-eye-invisible"
                                                viewBox="64 64 896 896"
                                                width="1em"
                                              >
                                                <path
                                                  d="M942.2 486.2Q889.47 375.11 816.7 305l-50.88 50.88C807.31 395.53 843.45 447.4 874.7 512 791.5 684.2 673.4 766 512 766q-72.67 0-133.87-22.38L323 798.75Q408 838 512 838q288.3 0 430.2-300.3a60.29 60.29 0 0 0 0-51.5zm-63.57-320.64L836 122.88a8 8 0 0 0-11.32 0L715.31 232.2Q624.86 186 512 186q-288.3 0-430.2 300.3a60.3 60.3 0 0 0 0 51.5q56.69 119.4 136.5 191.41L112.48 835a8 8 0 0 0 0 11.31L155.17 889a8 8 0 0 0 11.31 0l712.15-712.12a8 8 0 0 0 0-11.32zM149.3 512C232.6 339.8 350.7 258 512 258c54.54 0 104.13 9.36 149.12 28.39l-70.3 70.3a176 176 0 0 0-238.13 238.13l-83.42 83.42C223.1 637.49 183.3 582.28 149.3 512zm246.7 0a112.11 112.11 0 0 1 146.2-106.69L401.31 546.2A112 112 0 0 1 396 512z"
                                                  key="svg-eye-invisible-svg-0"
                                                />
                                                <path
                                                  d="M508 624c-3.46 0-6.87-.16-10.25-.47l-52.82 52.82a176.09 176.09 0 0 0 227.42-227.42l-52.82 52.82c.31 3.38.47 6.79.47 10.25a111.94 111.94 0 0 1-112 112z"
                                                  key="svg-eye-invisible-svg-1"
                                                />
                                              </svg>
                                            </IconReact>
                                          </i>
                                        </LocaleReceiver>
                                      </Icon>
                                    </span>
                                  </span>
                                </Input>
                              </Password>
                            </span>
                            <Animate
                              animation={Object {}}
                              component=""
                              componentProps={Object {}}
                              key="help"
                              onAppear={[Function]}
                              onEnd={[Function]}
                              onEnter={[Function]}
                              onLeave={[Function]}
                              transitionAppear={true}
                              transitionEnter={true}
                              transitionLeave={true}
                              transitionName="show-help"
                            />
                          </div>
                        </div>
                      </Col>
                    </div>
                  </Row>
                </FormItem>
                <div>
                  <Button
                    block={true}
                    className="login-form-button"
                    ghost={false}
                    htmlType="submit"
                    loading={false}
                    type="primary"
                  >
                    <Wave>
                      <button
                        className="ant-btn login-form-button ant-btn-primary ant-btn-block"
                        onClick={[Function]}
                        type="submit"
                      >
                        <span
                          key=".0"
                        >
                          Reset Password
                        </span>
                      </button>
                    </Wave>
                  </Button>
                </div>
              </form>
            </Form>
          </ResetConfirm>
        </withRouter(ResetConfirm)>
      </Form(withRouter(ResetConfirm))>
    </Connect(Form(withRouter(ResetConfirm)))>
  </Provider>
</Router>
`;
